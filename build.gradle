plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'}

group = 'com.szaszisoft'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

repositories {
	mavenCentral()
}

dependencies {
	// Dependency for env files
	// https://mvnrepository.com/artifact/io.github.cdimascio/java-dotenv
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
//	implementation 'com.mysql:mysql-connector-j:8.1.0'


	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j:8.1.0'
//	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

/*
task extractDependencies(type: Copy) {
	from configurations.runtimeClasspath
	into "$buildDir/dependency"
}
*/

tasks.named("bootJar") {
	launchScript()
}


/*
task unpackFatJar(type: Copy) {
	from zipTree("$buildDir/libs/_2048-0.0.1-SNAPSHOT.jar") // Replace 'your-application.jar' with the name of your fat JAR
	into file("$buildDir/dependency")
}
*/

/*

tasks.named("bootJar") {
	archiveClassifier = 'boot'
}

tasks.named("jar") {
	archiveClassifier = ''
}
*/

tasks.named("bootBuildImage") {
	builder = "mine/java-cnb-builder"
	runImage = "mine/java-cnb-run"
}


